AWSTemplateFormatVersion: "2010-09-09"
Description: "Resources for Dome9 hands-on"
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: "default"
      Tags: 
        - Key: "Name"
          Value: "Dome9 VPC"
  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone:
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: "Name"
          Value: "Dome9 PublicSubnet01"
  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone:
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: "Name"
          Value: "Dome9 PublicSubnet02"
  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone:
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: "Name"
          Value: "Dome9 PrivateSubnet01"
  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone:
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: "Name"
          Value: "Dome9 PrivateSubnet02"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "Dome9 InternetGateway"
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: "Name"
          Value: "Dome9 RouteTable"
  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
       RouteTableId:
         Ref: RouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: InternetGateway
  SubnetRouteTableAssociation01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet01
      RouteTableId:
        Ref: RouteTable
  SubnetRouteTableAssociation02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet02
      RouteTableId:
        Ref: RouteTable
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow ssh and http to client host
        VpcId:
          Ref: VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            SourceSecurityGroupId: !Ref ELBSecurityGroup
        SecurityGroupEgress:
          - IpProtocol: -1
            CidrIp: 0.0.0.0/0
  EC2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-0ab3e16f9c414dee7"
      InstanceType: t2.micro
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      SubnetId: 
        Ref: PublicSubnet01
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install httpd -y
          service httpd start
          chkconfig httpd on
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref EC2Instance
      Domain: vpc
    DependsOn: EC2Instance
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId:
          Ref: VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: -1
            CidrIp: 0.0.0.0/0
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: Dome9-Targets
      Port: 80
      Protocol: HTTP
      TargetType: instance
      Targets: 
        - 
          Id: !Ref EC2Instance
      VpcId: !Ref VPC
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: Dome9-ELB
      Scheme: internet-facing
      SecurityGroups: 
        - !Ref ELBSecurityGroup
      Subnets: 
        - !Ref PublicSubnet01
        - !Ref PublicSubnet02
      Type: application
  HTTPlistener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - 
          Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  DBSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: description
      SubnetIds: 
        - !Ref PrivateSubnet01
        - !Ref PrivateSubnet02
      Tags: 
        - 
          Key: Name
          Value: "Dome9 DB Subnet Group"
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId:
          Ref: VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            SourceSecurityGroupId: !Ref InstanceSecurityGroup
        SecurityGroupEgress:
          - IpProtocol: -1
            CidrIp: 0.0.0.0/0
  DB: 
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Delete
    Properties: 
      AllocatedStorage: "20"
      StorageType: "gp2"
      DBInstanceClass: "db.t2.micro"
      DBName: "mydb"
      Engine: MySQL
      EngineVersion: "8.0.16"
      MasterUserPassword: "LbL78pdcXyj9Zdv8"
      MasterUsername: "master"
      Tags: 
        - 
          Key: Name
          Value: "Dome9 Database"
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups: 
        - !Ref DBSecurityGroup
      MultiAZ: false
